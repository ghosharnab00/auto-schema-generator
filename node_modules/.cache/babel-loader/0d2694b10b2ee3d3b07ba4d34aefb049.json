{"ast":null,"code":"import fetch from 'node-fetch';\nimport cheerio from 'cheerio'; // function to get the raw data\n\nconst getRawData = URL => {\n  return fetch(URL).then(response => response.text()).then(data => {\n    return data;\n  });\n}; //const URL = \"https://www.hiration.com/blog/p/aef3562a-4dd1-4e47-ad48-a8b58e3ee6ea/\";\n// start of the program\n\n\nconst hirationblogdata = async url => {\n  const hirationblogdata = await getRawData(url);\n  const $ = cheerio.load(hirationblogdata);\n  let title = $('title');\n  console.log(title.text());\n  let description = $('meta[property=\"og:description\"]').attr(\"content\");\n  console.log(description); //find the publish date\n\n  let datepub = $('.post-full-meta-date').text();\n  console.log(datepub); //find the hero image\n\n  try {\n    let bgimg = $('.post-full-image').attr(\"style\").replace(\"background-image: url(\", \"\").replace(\")\", \"\").split('?')[0];\n    console.log(bgimg);\n  } catch (err) {\n    console.log(\"You did not add an header image\");\n  } // find the image urls\n\n\n  try {\n    let imob = $('img.img-hook');\n    console.log(imob.length);\n    $('img.img-hook').each((i, url) => {\n      const imgurl = $(url).attr(\"data-src\");\n      console.log(imgurl);\n    });\n  } catch (e) {\n    console.log(e); // handle error\n  }\n};\n\nexport default hirationblogdata(); // invoking the main function\n// const xml = \"https://www.hiration.com/sitemap.xml\";\n// const hirationxml = async () => {\n//     const hirationxml = await getRawData(xml);\n//     const $ = cheerio.load(hirationxml);\n//     const datepub = $('url ')\n//     console.log(datepub);\n// }\n// hirationxml();","map":{"version":3,"names":["fetch","cheerio","getRawData","URL","then","response","text","data","hirationblogdata","url","$","load","title","console","log","description","attr","datepub","bgimg","replace","split","err","imob","length","each","i","imgurl","e"],"sources":["/Users/ag/Documents/GitHub/auto-schema-generator/src/components/parser.js"],"sourcesContent":["import fetch from 'node-fetch';\nimport cheerio from 'cheerio';\n\n// function to get the raw data\nconst getRawData = (URL) => { \n   return fetch(URL)\n      .then((response) => response.text())\n      .then((data) => {\n         return data;\n      });\n};\n\n//const URL = \"https://www.hiration.com/blog/p/aef3562a-4dd1-4e47-ad48-a8b58e3ee6ea/\";\n\n// start of the program\n\nconst hirationblogdata = async (url) => {\n   const hirationblogdata = await getRawData(url);\n    const $ = cheerio.load(hirationblogdata);\n  let title = $('title');\n  console.log(title.text());\n  let description = $('meta[property=\"og:description\"]').attr(\"content\");\n  console.log(description);\n\n  //find the publish date\n  let datepub = $('.post-full-meta-date').text();\n  console.log(datepub);\n  \n//find the hero image\ntry {\n    let bgimg = $('.post-full-image').attr(\"style\").replace(\"background-image: url(\",\"\").replace(\")\",\"\").split('?')[0];\n    console.log(bgimg);} catch(err){\n        console.log(\"You did not add an header image\")\n    }\n\n\n  // find the image urls\n  try {\n    let imob = $('img.img-hook')\n  console.log(imob.length)\n  $('img.img-hook').each((i,url)=>{\n      const imgurl = $(url).attr(\"data-src\");\n      console.log(imgurl)\n  })\n  } catch (e) {\n    console.log(e) // handle error\n  }\n  \n\n        \n};\n\nexport default hirationblogdata();\n// invoking the main function\n\n\n// const xml = \"https://www.hiration.com/sitemap.xml\";\n\n// const hirationxml = async () => {\n//     const hirationxml = await getRawData(xml);\n//     const $ = cheerio.load(hirationxml);\n//     const datepub = $('url ')\n//     console.log(datepub);\n\n// }\n// hirationxml();\n\n\n\n\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB,C,CAEA;;AACA,MAAMC,UAAU,GAAIC,GAAD,IAAS;EACzB,OAAOH,KAAK,CAACG,GAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADhB,EAEHF,IAFG,CAEGG,IAAD,IAAU;IACb,OAAOA,IAAP;EACF,CAJG,CAAP;AAKF,CAND,C,CAQA;AAEA;;;AAEA,MAAMC,gBAAgB,GAAG,MAAOC,GAAP,IAAe;EACrC,MAAMD,gBAAgB,GAAG,MAAMN,UAAU,CAACO,GAAD,CAAzC;EACC,MAAMC,CAAC,GAAGT,OAAO,CAACU,IAAR,CAAaH,gBAAb,CAAV;EACF,IAAII,KAAK,GAAGF,CAAC,CAAC,OAAD,CAAb;EACAG,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACN,IAAN,EAAZ;EACA,IAAIS,WAAW,GAAGL,CAAC,CAAC,iCAAD,CAAD,CAAqCM,IAArC,CAA0C,SAA1C,CAAlB;EACAH,OAAO,CAACC,GAAR,CAAYC,WAAZ,EANsC,CAQtC;;EACA,IAAIE,OAAO,GAAGP,CAAC,CAAC,sBAAD,CAAD,CAA0BJ,IAA1B,EAAd;EACAO,OAAO,CAACC,GAAR,CAAYG,OAAZ,EAVsC,CAYxC;;EACA,IAAI;IACA,IAAIC,KAAK,GAAGR,CAAC,CAAC,kBAAD,CAAD,CAAsBM,IAAtB,CAA2B,OAA3B,EAAoCG,OAApC,CAA4C,wBAA5C,EAAqE,EAArE,EAAyEA,OAAzE,CAAiF,GAAjF,EAAqF,EAArF,EAAyFC,KAAzF,CAA+F,GAA/F,EAAoG,CAApG,CAAZ;IACAP,OAAO,CAACC,GAAR,CAAYI,KAAZ;EAAoB,CAFxB,CAEyB,OAAMG,GAAN,EAAU;IAC3BR,OAAO,CAACC,GAAR,CAAY,iCAAZ;EACH,CAjBmC,CAoBtC;;;EACA,IAAI;IACF,IAAIQ,IAAI,GAAGZ,CAAC,CAAC,cAAD,CAAZ;IACFG,OAAO,CAACC,GAAR,CAAYQ,IAAI,CAACC,MAAjB;IACAb,CAAC,CAAC,cAAD,CAAD,CAAkBc,IAAlB,CAAuB,CAACC,CAAD,EAAGhB,GAAH,KAAS;MAC5B,MAAMiB,MAAM,GAAGhB,CAAC,CAACD,GAAD,CAAD,CAAOO,IAAP,CAAY,UAAZ,CAAf;MACAH,OAAO,CAACC,GAAR,CAAYY,MAAZ;IACH,CAHD;EAIC,CAPD,CAOE,OAAOC,CAAP,EAAU;IACVd,OAAO,CAACC,GAAR,CAAYa,CAAZ,EADU,CACK;EAChB;AAIF,CAlCD;;AAoCA,eAAenB,gBAAgB,EAA/B,C,CACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}